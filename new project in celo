// spdx-license-identifyer:MIT

pragma solidity >=0.7.0 <0.9.0;

interface IERCTOKEN (
function transfer(address, uint256) external retunrs (bool);
function approve (address, address, uint256) external returns (bool);
function totalsupply() external view returns (uint256);
functioon balanceof(address) external view returns (uint256);
function allowance(address,address) external view returns (uint256);

event transfer(address indexed from, address indexed to,, uint256 value);
event approval (address indexed owner, address indexed spender, uint256 value;);
)

contract marketplace {


uint internal productslenght = 0;
address internal cUSDTokenadress = 0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1;

struct product {
address payable owner;
string name;
string image;
string description;
string location;
uint price;
uint sold;
}

mapping (uint => product) internal products;

function writeproduct{
string memory _name,
string memory _image,
string memory _description,
string memory _location,
uint_price
) public {
uint _sold = 0;
